
devtools::document()
library(bpnreg)
units <- "radians"
!(units == "degrees" | units == "radians")
paste(c("ax", "ac", "bc", "AS", "SAM", "SSDO"), c("mean", "mode", "sd", "LB HPD", "UB HPD"))
paste(rep(c("ax", "ac", "bc", "AS", "SAM", "SSDO"),5), c("mean", "mode", "sd", "LB HPD", "UB HPD"))
paste(c("ax", "ac", "bc", "AS", "SAM", "SSDO"), rep(c("mean", "mode", "sd", "LB HPD", "UB HPD"), 5)
)
paste(rep(c("mean", "mode", "sd", "LB HPD", "UB HPD"), 5), c("ax", "ac", "bc", "AS", "SAM", "SSDO"))
?rep()
c("mean", "mode", "sd", "LB HPD", "UB HPD"), each = 5)
rep(c("mean", "mode", "sd", "LB HPD", "UB HPD"), each = 5)
paste(rep(c("ax", "ac", "bc", "AS", "SAM", "SSDO"), each = 5), c("mean", "mode", "sd", "LB HPD", "UB HPD"))
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
coef_circ(fit.Maps2)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + Learning.c + (1|Subject),
+                    data = Maps,
+                    its = 100, burn = 100, n.lag = 3)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + Learning.c +  (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + Learning_c +  (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
Maps
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + Learn.c +  (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
coef_circ(fit.Maps2)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond + AvAmp, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond + AvAmp, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
devtools::document()
library(bpnreg)
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
devtools::document()
library(bpnreg)
coef_circ(fit.Motor, type = "categorical")
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
fit.Motor$circ.coef
devtools::document()
library(bpnreg)
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
coef_circ(fit.Motor, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
coef_circ(fit.Maps2, type = Continuous)
coef_circ(fit.Maps2, type = "continuous")
coef_circ(fit.Maps2, type = "continuous", units = "degrees")
coef_circ(fit.Maps2, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond + AvAmp, data = Motor,
its = 10000, burn = 100, n.lag = 5)
fit.Motor$circ.coef.means
fit.Motor$circ.coef.cat
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond + AvAmp, data = Motor,
its = 10000, burn = 100, n.lag = 5)
fit.Motor$circ.coef.means
fit.Motor$circ.coef.cat
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + Learn.c +  (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
fit.Maps2$circ.coef.means
fit.maps2$circ.coef.means
fit.Maps2$circ.coef.cat
devtools::document()
library(bpnreg)
coef_circ(Motor, type = "categorical")
coef_circ(fit.Motor, type = "categorical")
fit.Maps2 <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + Learn.c +  (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond + AvAmp, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "categorical")
coef_circ(fit.Motor, type = "categorical", units = "degrees")
coef_circ(fit.Maps2, type = "categorical")
coef_circ(fit.Maps2, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
print(fit.Motor)
print(fit.Maps2)
devtools::document()
library(bpnreg)
print(fit.Maps2)
devtools::document()
library(bpnreg)
print(fit.Maps2)
print(fit.Motor)
print(fit.Maps2)
devtools::check()
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "continuous")
coef_circ(fit.Motor, type = "categorical")
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "categorical")
coef_circ(fit.Motor, type = "categorical", units = "degrees")
fit.Maps2 <- bpnme(pred.I = Error.rad ~  (1|Subject),
data = Maps,
its = 100, burn = 100, n.lag = 3)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 , data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 , data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(ft.Motor, type = "categorical")
coef_circ(fit.Motor, type = "categorical")
devtools::document()
library(bpnreg)
paste(rep(c("bla", "ha"), each = 5),c("ax", "ac", "bc", "AS", "SAM", "SSDO"))
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
require(haven)
Maps <- haven::read_spss(file = "data-raw/Cognitive Maps/WarrenExp1.sav")
Maps$Error.rad <- (Maps$Error/180)*pi
Maps$L.c <- Maps$Learn-mean(Maps$Learn)
Maps$Maze <- as.factor(Maps$Maze)
Maps$Trial.type <- as.factor(Maps$Trial.type)
devtools::use_data(Maps, overwrite = TRUE)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
Maps <- haven::read_spss(file = "data-raw/Cognitive Maps/WarrenExp1.sav")
Maps <- haven::read_spss(file = "data_raw/Cognitive Maps/WarrenExp1.sav")
Maps$Error.rad <- (Maps$Error/180)*pi
Maps$L.c <- Maps$Learn-mean(Maps$Learn)
Maps$Maze <- as.factor(Maps$Maze)
Maps$Trial.type <- as.factor(Maps$Trial.type)
devtools::use_data(Maps, overwrite = TRUE)
devtools::document()
library(bpnreg)
devtools::document()
library(bpnreg)
?rnorm
devtools::document()
library(bpnreg)
devtools::check()
devtools::document()
library(bpnreg)
devtools::build_win()
devtools::document()
library(bpnreg)
devtools::check()
devtools::document()
library(bpnreg)
devtools::check()
devtools::build_win()
devtools::document()
devtools::check()
library(bpnreg)
devtools::document()
library(bpnreg)
source('C:/Users/Jolien/surfdrive/bpnreg/R/bpnreg.R')
combn(c("hi", "bye",  "haha"), 2)
combn(c(1,2),2)
atan2(1,1)
atan2(1+0.2, 1+0.2)
atan2(1+0.1, 1+0.2)
atan2(1+0.3, 1+0.4)
atan2(1-0.3, 1-0.4)
atan2(1+0.1-0.3, 1+0.2-0.4)
atan2(1-0.3, 1-0.4)-atan2(1,1)+atan2(1-0.3, 1-0.4)
unique(combn(c("hi", "bye",  "haha"), 2))
unique(cbind(combn(c("hi", "bye",  "haha"), 2),combn(c("hi", "bye",  "haha"), 2))
)
c("hi", "bye",  "haha")[-"hi"]
c("hi", "bye",  "haha")[-c("hi")]
var.cat
var.cat<- c("hi", "bye",  "haha")
var.cat[-"hi"]
c("hi", "bye",  "haha")[!"hi"]
c("hi", "bye",  "haha")[!c("hi")]
c("hi", "bye",  "haha")[-1]
devtools::document()
bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
library(bpnreg)
bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(Maps, type = "categorical")
coef_circ(fit.Maps, type = "categorical")
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,

its = 100, burn = 10, n.lag = 3)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps$circ.coef.means.comb
fit.Maps$circ.coef.means
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps)
coef_circ(fit.Maps, type = categorical)
coef_circ(fit.Maps, type = "categorical")
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical")
coef_circ(fit.Maps, type = "categorical", units = "degrees")
matrix <- combn(c("hihi", "bla", "ga"), 2)
sapply(1:ncol(matrix), function(w){paste(matrix[,w])})
paste(matrix[,1])
paste(matrix[,1], sep = "")
matrix(,1)
matrix[,1]
paste(matrix[,1], sep = "", collapse = "")
apply(matrix, 2, paste(matrix, sep = "", collapse = ""))
sapply(1:ncol(matrix), function(w){paste(matrix[,w], sep = "", collapse = "")})
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical")
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
coef_lin
coef_lin(fit.Maps)
coef_circ(fit.Maps, type = "categorical")
dummy <- atan2(fit.Maps$Beta.II[, "(Intercept)"] + fit.Maps$Beta.II[, "Maze1"] + fit.Maps$Beta.II[, "Trial.type1"],
fit.Maps$Beta.I[, "(Intercept)"] + fit.Maps$Beta.I[, "Maze1"] + fit.Maps$Beta.I[, "Trial.type1"])
theta_bar(dummy)
mean_circ(dummy)
mean_circ(dummy, units = "degrees")
devtools::document()
mean_circ(dummy, units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
ncol(0)
1 + NULL
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + Trial.type,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze ,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze ,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze ,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c
data = Maps,
its = 1000, burn = 10, n.lag = 3)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps,
its = 1000, burn = 10, n.lag = 3)
fit.Maps <- bpnr(pred.I = Error.rad ~ Maze + L.c,
data = Maps, pred.II = Error.rad ~ Maze + Trial.type,
its = 1000, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
devtools::document()
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Maps <- bpnme(pred.I = Error.rad ~ Maze + Trial.type + L.c + (1|Subject),
data = Maps,
its = 100, burn = 10, n.lag = 3)
coef_circ(fit.Maps, type = "categorical", units = "degrees")
devtools::document()
library(bpnreg)
fit.Motor <- bpnr(pred.I = Phaserad ~ 1 + Cond, data = Motor,
its = 10000, burn = 100, n.lag = 5)
coef_circ(fit.Motor, type = "categorical")
sessionInfo()
packageVersion("RcppArmadillo")
packageVersion("Rcpp")
packageVersion("BH")
packageVersion("MASS")
packageVersion("haven")
packageVersion("methods")
devtools::document()
library(bpnreg)
devtools::check()
devtools::document()
library(bpnreg)
devtools::check()

source("https://install-github.me/MangoTheCat/goodpractice")
library(goodpractice)
gp("<bpnreg>")
gp("bpnreg")
gp()
devtools::document()
library(bpnreg)
gp("bpnreg")
gp()
gp()
library(goodpractice)
gp()
gp(quiet = FALSE)
devtools::document()
library(bpnreg)
source('C:/Users/Jolien/surfdrive/bpnreg/R/regression.R')
devtools::document()
library(bpnreg)

